---
title: "JavaScript"
---

# 字符串拼接[@jsConcat]

要使用 `+` 而不是 `string.concat()`。

# Array

## flatMap[@jsArrayFlatMap]

等价于先 `map()` 再 `flat()`。

```js
let arr1 = [1, 2, 3, 4];

arr1.map(x => [x * 2]); 
// [[2], [4], [6], [8]]

arr1.flatMap(x => [x * 2]);
// [2, 4, 6, 8]

// only one level is flattened
arr1.flatMap(x => [[x * 2]]);
// [[2], [4], [6], [8]]
```

# 正则表达式

------------------------------------------------------------------------------------------------------
代码 含义
---- -------------------------------------------------------------------------------------------------
`\s` 单个空白字符，等价于 `[ \f\n\r\t\v\u00a0\u1680\u2000-\u200a\u2028\u2029\u202f\u205f\u3000\ufeff]`

`\W` 非基本拉丁字母，等价于 `[^A-Za-z0-9_]`
------------------------------------------------------------------------------------------------------

: JavaScript 常用正则表达式 {#tbl:jsCommonRegex}

# 导航到新地址[@jsNavigateURL]

```js
window.location.href = '...';
```

# 得到链接的 href 属性[@jsAHref]

```js
document.getElementById("aaa").href;
```

# 寻找元素

```js
var matches = document.querySelectorAll("p");
```

# 移动元素[@jsMoveElement]

```js
newParent.appendChild(element);
```

# 改变元素的类[@jsChangeElementClass]

```js
document.getElementById("MyElement").classList.add('MyClass');

document.getElementById("MyElement").classList.remove('MyClass');

if ( document.getElementById("MyElement").classList.contains('MyClass') )

document.getElementById("MyElement").classList.toggle('MyClass');
```

# 参考文献
