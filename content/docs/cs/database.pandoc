---
title: "数据库"
---

# Entity Relationship Diagram

## 安装

```sh
curl -LO 'https://github.com/BurntSushi/erd/releases/download/v0.2.1.0-RC1/erd_static-x86-64'
chmod u+x erd_static-x86-64
cp -i erd_static-x86-64 ~/.local/bin/erd
```

# SQL 命名规范

| 类别        | 规范                           | 例子                          |
|-------------|--------------------------------|-------------------------------|
| 表名        | 单数[@sqlTableNameSingular]    | `user`                        |
| identifiers | snake case[@sqlNameConvention] | `lower_case_with_underscores` |
| user        | 使用非保留关键词               | `user_`                       |

: SQL 命名规范 {#tbl:sqlNameConvention}

# PostgreSQL

## 安装

### Arch Linux

```sh
$ sudo pacman -S postgres
$ sudo -iu postgres
[postgres]$ initdb -D /var/lib/postgres/data
[postgres]$ exit
$ sudo systemctl start postgresql.service
$ sudo systemctl enable postgresql.service
```

### Ubuntu

```sh
UBUNTU_VERSION=xenial
echo "deb http://apt.postgresql.org/pub/repos/apt/ $UBUNTU_VERSION-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
sudo apt update
sudo apt install postgresql
```

## 创建用户

```sh
$ sudo -iu postgres
[postgres]$ createuser --interactive # --pwprompt 要求输入密码
```

## 创建数据库

```sh
createdb <name>
```

## 注释

```sql
-- 注释
```

## 数据类型[@postgresDataTypes]

| 数据类型   | 含义       |
|------------|------------|
| bool       | 布尔值     |
| varchar(n) | 变长字符串 |

: PostgreSQL 数据类型 {#tbl:postgresDataTypes}

## psql 指令

| 指令              | 含义               |
|-------------------|--------------------|
| `\du`             | 列出用户           |
| `\l`              | list all databases |
| `\dt`             | 列出表             |
| `\d <table_name>` | 显示表定义         |

: psql 指令 {#tbl:psqlCommands}

## 参数替换[@postgres_parameter_substitution]

```sql
PREPARE fooplan (int, text, bool, numeric) AS
    INSERT INTO foo VALUES($1, $2, $3, $4);
EXECUTE fooplan(1, 'Hunter Valley', 't', 200.00);
```

## 模糊查找[@postgres_pattern_match]

`LIKE` 时间和空间复杂度上限更容易控制。

## 按拼音排序[@postgres_collate]

```sql
SELECT * FROM a ORDER BY c1 COLLATE "zh_CN";
```
# 参考文献
