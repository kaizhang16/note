---
title: "二叉树"
---

# 958 二叉树的完全性检验

若设二叉树的深度为 h，除第 h 层外，其它各层 (1～h-1) 的结点数都达到最大个数，第
h 层所有的结点都连续集中在最左边，这就是完全二叉树。（注：第 h 层可能包含 $1 \sim 2^h$
个节点。）

## 广度优先遍历

- 时间复杂度：$O(n)$
- 空间复杂度：$O(n)$

```c++
bool is_complete_tree_v2(TreeNode *root) {
    std::queue<TreeNode *> q;
    if (root) {
        q.push(root);
    }
    bool is_pre_end = false;
    while (!q.empty()) {
        auto front = q.front();
        q.pop();
        if ((front->right && !front->left) ||
            (is_pre_end && (front->left || front->right))) {
            return false;
        }
        if (!front->left || !front->right) {
            is_pre_end = true;
        }
        if (front->left) {
            q.push(front->left);
        }
        if (front->right) {
            q.push(front->right);
        }
    }
    return true;
}
```
